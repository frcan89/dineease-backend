type: object
properties:
  idProducto: # Changed from id_producto
    type: integer
    readOnly: true
    example: 101
  nombre:
    type: string
    example: "Tomate Fresco"
  descripcion:
    type: string
    nullable: true
    example: "Tomates rojos maduros para ensalada."
  unidad_medida: # Ensure this matches model's 'field' if different
    type: string
    example: "Kg"
  precio_compra: # Ensure this matches model's 'field' if different
    type: number
    format: float
    nullable: true
    example: 1.50
  stock_minimo: # Ensure this matches model's 'field' if different
    type: integer
    nullable: true
    example: 5
  idUsuario: # Changed from id_usuario_registro
    type: integer
    nullable: true
    readOnly: true
    example: 45
  idRestaurante: # Changed from id_restaurante
    type: integer
    readOnly: true # Typically readOnly as it's set on creation
    example: 1
  Restaurante: # Added to show associated Restaurante details
    type: object
    readOnly: true
    properties:
      idRestaurante:
        type: integer
        example: 1
      nombre:
        type: string
        example: "El Gran Sabor"
  createdAt: # Changed from fecha_creacion
    type: string
    format: date-time
    readOnly: true
  updatedAt: # Changed from fecha_actualizacion
    type: string
    format: date-time
    readOnly: true
  # The model uses paranoid: true, which creates 'deletedAt'.
  # If 'fecha_eliminacion' is the actual field name for deletedAt (e.g. via deletedAt: 'fecha_eliminacion' in model definition), use that.
  # Otherwise, use 'deletedAt'. The service code currently refers to 'fecha_eliminacion'.
  # Let's assume 'fecha_eliminacion' is explicitly set as the deletedAt field in the model, or there is a mapping.
  # If not, this should be 'deletedAt'. For now, aligning with service:
  fecha_eliminacion:
    type: string
    format: date-time
    nullable: true
    readOnly: true
    example: null
